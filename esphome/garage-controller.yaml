esphome:
  name: garage-controller
  friendly_name: garage-controller
  min_version: 2024.11.0
  name_add_mac_suffix: false

esp32:
  board: mhetesp32minikit
  framework:
    type: esp-idf

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: ".shencentral.net"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap: {}

captive_portal:

#
# DEFINE GPIOs
#
binary_sensor:
  - platform: status
    name: "Garage Controller Status"

  - platform: gpio
    name: "Lg Garage is Closed"
    id: lg_garage_is_closed
    # device_class: garage_door
    pin:
      number: GPIO27             # blue wire
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_on_off: 500ms
      
  - platform: gpio
    name: "Lg Garage is Open"
    id: lg_garage_is_open
    # device_class: garage_door
    pin:
      number: GPIO25             # brown wire
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_on_off: 500ms

  - platform: gpio
    name: "Sm Garage is Closed"
    id: sm_garage_is_closed
    # device_class: garage_door
    pin:
      number: GPIO32              # violet wire
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_on_off: 500ms

  - platform: gpio
    name: "Sm Garage is Open"
    id: sm_garage_is_open
    # device_class: garage_door
    pin:
      number: GPIO12               # yellow wire
      inverted: true
      mode:
        input: true
        pullup: true
    filters:
      - delayed_on_off: 500ms


output:
- platform: gpio
  id: lg_garage_output
  pin:
    number: GPIO16                  # orange wire

- platform: gpio
  id: sm_garage_output
  pin:
    number: GPIO17                  # green wire


button:
  - platform: output
    name: "Lg Garage Trigger"
    id: lg_garage_trigger
    output: lg_garage_output
    duration: 500ms

  - platform: output
    name: "Sm Garage Trigger"
    id: sm_garage_trigger
    output: sm_garage_output
    duration: 500ms

  - platform: restart
    name: "Restart Garage Controller"

one_wire:
  - platform: gpio
    pin: GPIO13

#
# EXPOSE SENSORS/ENTITIES
#
sensor:
  # Send WiFi signal strength & uptime to HA
  - platform: wifi_signal
    name: Garage Controller WiFi Strength
    id: garage_control_wifi_strength
    unit_of_measurement: 'dBm'
    update_interval: 60s

  - platform: dallas_temp
    name: "Garage Controller Temperature"
    id: garage_controller_temperature
    update_interval: 120s
    unit_of_measurement: "Â°C"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1

#
# Garage door behavior:
# - There is only one input for up, down, and stop.
# - The door stops on a open/close/stop buttom activation and on a subsequent button activation travels opposite of the original direction
# - The door reverses completely to fully open position if threshold sensors are tripped or a obstacle is encountered
#
# Desired garage door logic:  (only the first item has been implemented)
# - if sensors confirm closed or open then return the confirmed state
# - if state is closed when switch is triggered, then return "opening" until open sensor is activated
#   - if open sensor is not activated within the timeout period, then "fault" is returned
# - if state is open when switch is triggered, then return "closing" until close sensor is triggered 
#   - if closed sensor is not activated within the timeout period, then "fault"" is returned
#

cover:
  - platform: template
    name: "Large Garage"
    lambda: |-
      if (id(lg_garage_is_closed).state == 1)
        return COVER_CLOSED;
      else
        return COVER_OPEN;
    open_action:
      - if:
          condition:
            lambda: 'return (id(lg_garage_is_closed).state == 1);'
          then:
            - button.press: lg_garage_trigger
          else:
            - logger.log: "CMD NOT SENT - Large garage door already open"
    close_action:
      - if:
          condition:
            lambda: 'return (id(lg_garage_is_open).state == 1);'
          then:
            - button.press: lg_garage_trigger
          else:
            - logger.log: "CMD NOT SENT - Large garage door already closed"
    stop_action:
      - button.press: lg_garage_trigger


  - platform: template
    name: "Small Garage"
    lambda: |-
      if (id(sm_garage_is_closed).state == 1)
        return COVER_CLOSED;
      else
        return COVER_OPEN;
    open_action:
      - if:
          condition:
            lambda: 'return (id(sm_garage_is_closed).state == 1);'
          then:
            - button.press: sm_garage_trigger
          else:
            - logger.log: "CMD NOT SENT - Small garage door already open"
    close_action:
      - if:
          condition:
            lambda: 'return (id(sm_garage_is_open).state == 1);'
          then:
            - button.press: sm_garage_trigger
          else:
          - logger.log: "CMD NOT SENT - Small garage door already closed"
    stop_action:
      - button.press: sm_garage_trigger
